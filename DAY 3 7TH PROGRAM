def permute_unique(nums):
    def backtrack(start):
        if start == len(nums):
            result.append(nums[:])
            return
        
        for i in range(start, len(nums)):
            if i > start and nums[i] == nums[start]:
                continue
            nums[start], nums[i] = nums[i], nums[start]
            backtrack(start + 1)
            nums[start], nums[i] = nums[i], nums[start]
    
    nums.sort()
    result = []
    backtrack(0)
    return result

# Test cases
test_cases = [
    [1, 1, 2],
    [1, 2, 3],
    [2, 8, 9, 10],
    [-1, 0, 1],
    [1, 1, 1]
]

for nums in test_cases:
    print("Output:", permute_unique(nums))
