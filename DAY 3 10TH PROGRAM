def min_operations(word1, word2):
    m, n = len(word1), len(word2)
    dp = [[0] * (n + 1) for _ in range(m + 1)]
    
    for i in range(m + 1):
        dp[i][0] = i
        
    for j in range(n + 1):
        dp[0][j] = j
    
    for i in range(1, m + 1):
        for j in range(1, n + 1):
            if word1[i - 1] == word2[j - 1]:
                dp[i][j] = dp[i - 1][j - 1]
            else:
                dp[i][j] = 1 + min(dp[i - 1][j], dp[i][j - 1], dp[i - 1][j - 1])
    
    return dp[m][n]

# Test cases
test_cases = [
    ("horse", "ros"),       # Output: 3
    ("intention", "execution"),  # Output: 5
    ("sunday", "saturday"),      # Output: 3
    ("cat", "cut"),             # Output: 1
    ("girl", "grill")           # Output: 2
]

for word1, word2 in test_cases:
    print("Output:", min_operations(word1, word2))

